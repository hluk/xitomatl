---
# yamllint disable rule:line-length
name: package

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.buildname }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest

        python-version:
          - "3.12"

        include:
          - os: windows-latest
            buildname: Windows
            artifact-name: xitomatl for Windows
            artifact-file: xitomatl.exe
            command: ./xitomatl.exe
            nuitka-arguments: --windows-icon-from-ico=xitomatl.png --lto=no

          - os: macos-latest
            buildname: macOS
            artifact-name: xitomatl for macOS
            artifact-file: xitomatl.app
            command: xitomatl.app/Contents/MacOS/xitomatl
            nuitka-arguments: --macos-app-icon=xitomatl.png --clang --macos-create-app-bundle

          - os: ubuntu-latest
            buildname: Linux
            artifact-name: xitomatl for Linux
            artifact-file: xitomatl.bin
            command: ./xitomatl.bin
            nuitka-arguments: --linux-onefile-icon=xitomatl.svg

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync

      - name: (Linux) Install runtime dependencies
        if: runner.os == 'Linux'
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          retry_wait_seconds: 30
          max_attempts: 3
          command: >-
            sudo apt-get update &&
            sudo apt-get install
            libegl1
            libopengl0

      - name: (macOS) Fix build dependencies
        if: runner.os == 'macOS'
        shell: bash
        run: >-
          brew link --overwrite openssl@1.1

      - name: (macOS & Windows) Generate PNG icon from SVG
        if: ${{ runner.os == 'macOS' || runner.os == 'Windows' }}
        run: uv run python svg_to_png.py

      - name: Use version from Git
        shell: bash
        run: ./update_version.sh

      - name: Create package
        env:
          PYTHONIOENCODING: utf-8
          LD_LIBRARY_PATH: /usr/local/lib/:$LD_LIBRARY_PATH
        run: >-
          uv run python -m nuitka
          --onefile
          --standalone
          --python-flag=no_site
          --assume-yes-for-downloads
          --plugin-enable=pyside6
          --plugin-enable=anti-bloat
          --show-modules
          --show-scons
          ${{ matrix.nuitka-arguments }}
          xitomatl

      - name: List package files
        shell: bash
        run: ls -lSh xitomatl.dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-file }}
          if-no-files-found: error

      - name: Run smoke test
        shell: bash
        run: ${{ matrix.command }} --version

      - name: Install dev dependencies
        run: uv sync --group dev

      - name: Run tests
        run: uv run pytest
